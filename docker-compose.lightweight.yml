version: '3.8'

services:
  # PeteOllama Web Application (Lightweight)
  peteollama:
    build:
      context: .
      dockerfile: Dockerfile.lightweight
    container_name: peteollama-app-lightweight
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql://peteollama:secure_password@postgres:5432/peteollama_db
      - REDIS_URL=redis://redis:6379/0
      - RUNPOD_SERVERLESS_ENDPOINT=${RUNPOD_SERVERLESS_ENDPOINT}
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
      - PYTHONPATH=/app/src
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: peteollama-postgres-lightweight
    environment:
      - POSTGRES_DB=peteollama_db
      - POSTGRES_USER=peteollama
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U peteollama -d peteollama_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: peteollama-redis-lightweight
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
